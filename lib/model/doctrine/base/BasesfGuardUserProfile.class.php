<?php

/**
 * BasesfGuardUserProfile
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property string $bio
 * @property integer $address_id
 * @property sfGuardUser $User
 * @property ShowmobileAddressBook $Address
 * 
 * @method integer               getUserId()     Returns the current record's "user_id" value
 * @method string                getBio()        Returns the current record's "bio" value
 * @method integer               getAddressId()  Returns the current record's "address_id" value
 * @method sfGuardUser           getUser()       Returns the current record's "User" value
 * @method ShowmobileAddressBook getAddress()    Returns the current record's "Address" value
 * @method sfGuardUserProfile    setUserId()     Sets the current record's "user_id" value
 * @method sfGuardUserProfile    setBio()        Sets the current record's "bio" value
 * @method sfGuardUserProfile    setAddressId()  Sets the current record's "address_id" value
 * @method sfGuardUserProfile    setUser()       Sets the current record's "User" value
 * @method sfGuardUserProfile    setAddress()    Sets the current record's "Address" value
 * 
 * @package    showmobile
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasesfGuardUserProfile extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_guard_user_profile');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('bio', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('address_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('ShowmobileAddressBook as Address', array(
             'local' => 'address_id',
             'foreign' => 'id'));
    }
}