<?php

/**
 * BaseShowmobileVenue
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property integer $address_book_id
 * @property integer $phone
 * @property integer $fax
 * @property string $url
 * @property string $email
 * @property string $img
 * @property string $logo
 * @property ShowmobileAddressBook $Address
 * @property Doctrine_Collection $ShowmobileEvent
 * 
 * @method string                getName()            Returns the current record's "name" value
 * @method integer               getAddressBookId()   Returns the current record's "address_book_id" value
 * @method integer               getPhone()           Returns the current record's "phone" value
 * @method integer               getFax()             Returns the current record's "fax" value
 * @method string                getUrl()             Returns the current record's "url" value
 * @method string                getEmail()           Returns the current record's "email" value
 * @method string                getImg()             Returns the current record's "img" value
 * @method string                getLogo()            Returns the current record's "logo" value
 * @method ShowmobileAddressBook getAddress()         Returns the current record's "Address" value
 * @method Doctrine_Collection   getShowmobileEvent() Returns the current record's "ShowmobileEvent" collection
 * @method ShowmobileVenue       setName()            Sets the current record's "name" value
 * @method ShowmobileVenue       setAddressBookId()   Sets the current record's "address_book_id" value
 * @method ShowmobileVenue       setPhone()           Sets the current record's "phone" value
 * @method ShowmobileVenue       setFax()             Sets the current record's "fax" value
 * @method ShowmobileVenue       setUrl()             Sets the current record's "url" value
 * @method ShowmobileVenue       setEmail()           Sets the current record's "email" value
 * @method ShowmobileVenue       setImg()             Sets the current record's "img" value
 * @method ShowmobileVenue       setLogo()            Sets the current record's "logo" value
 * @method ShowmobileVenue       setAddress()         Sets the current record's "Address" value
 * @method ShowmobileVenue       setShowmobileEvent() Sets the current record's "ShowmobileEvent" collection
 * 
 * @package    showmobile
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseShowmobileVenue extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('showmobile_venue');
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('address_book_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('phone', 'integer', 12, array(
             'type' => 'integer',
             'length' => 12,
             ));
        $this->hasColumn('fax', 'integer', 12, array(
             'type' => 'integer',
             'length' => 12,
             ));
        $this->hasColumn('url', 'string', 25, array(
             'type' => 'string',
             'length' => 25,
             ));
        $this->hasColumn('email', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('img', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('logo', 'string', null, array(
             'type' => 'string',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ShowmobileAddressBook as Address', array(
             'local' => 'address_book_id',
             'foreign' => 'id'));

        $this->hasMany('ShowmobileEvent', array(
             'local' => 'id',
             'foreign' => 'venue_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}