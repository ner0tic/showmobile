<?php

/**
 * BaseShowmobileVehicleColor
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $hex
 * @property string $rgb
 * @property Doctrine_Collection $ShowmobileVehicle
 * 
 * @method string                 getName()              Returns the current record's "name" value
 * @method string                 getHex()               Returns the current record's "hex" value
 * @method string                 getRgb()               Returns the current record's "rgb" value
 * @method Doctrine_Collection    getShowmobileVehicle() Returns the current record's "ShowmobileVehicle" collection
 * @method ShowmobileVehicleColor setName()              Sets the current record's "name" value
 * @method ShowmobileVehicleColor setHex()               Sets the current record's "hex" value
 * @method ShowmobileVehicleColor setRgb()               Sets the current record's "rgb" value
 * @method ShowmobileVehicleColor setShowmobileVehicle() Sets the current record's "ShowmobileVehicle" collection
 * 
 * @package    showmobile
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseShowmobileVehicleColor extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('showmobile_vehicle_color');
        $this->hasColumn('name', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('hex', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('rgb', 'string', null, array(
             'type' => 'string',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ShowmobileVehicle', array(
             'local' => 'id',
             'foreign' => 'color_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}